{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.77f62b417097a1c33086.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { withRouter } from 'next/router';\r\nimport React, { Component } from 'react';\r\nimport Head from 'next/head';\r\nimport '../static/bootstrap.min.css';\r\nimport '../static/style.css';\r\nimport Popup from './Popup';  \r\nimport Slides from './Slides';\r\nimport Tooltip from './Tooltip';\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      isPopActive: false,\r\n      slideInterval: 5000,\r\n      clickedSlide: ''\r\n     };\r\n    this.onSlideClick = this.onSlideClick.bind(this);\r\n    this.activatePop = this.activatePop.bind(this);\r\n  }\r\n  componentDidMount(){\r\n    \r\n\r\n    /* Adaptive layout using Grid and percentages/fractions */\r\n    var cont = document.querySelector('#container');\r\n    var images = document.querySelectorAll('.images');\r\n\r\n    window.onload = ()=> {\r\n      //document.body.id = 'theBody';\r\n      var currentWidth = window.innerWidth;\r\n      var currentHeight = window.innerHeight;\r\n      var maxWidth = 1280;\r\n      var minWidth = 360;\r\n      var maxHeight = 732;\r\n      var minHeight = 560; \r\n      var widthRange = maxWidth - minWidth;\r\n      var heightRange = maxHeight - minHeight;\r\n      var sideRange = 17;\r\n      var topRange = 5;\r\n      var bottomRange = 12;\r\n      var midRange = 18;\r\n      var sideFactor = widthRange / sideRange;\r\n      var topFactor = heightRange / topRange;\r\n      var midFactor = heightRange / midRange;\r\n      var bottomFactor = heightRange / bottomRange;\r\n      var sidePercent = (maxWidth - currentWidth)/sideFactor;\r\n      var topPercent = (maxHeight - currentHeight)/topFactor;\r\n      var midPercent = (maxHeight - currentHeight)/midFactor;\r\n      var bottomPercent = (maxHeight - currentHeight)/bottomFactor;\r\n      //side spaces go from 17% to 0%\r\n      cont.style.gridTemplateColumns = \r\n        `${(17-sidePercent).toFixed(1)}fr \r\n         66fr \r\n         ${(17-sidePercent).toFixed(1)}fr`\r\n      //top and bottom go to 25%, midHeight(video) takes remaining 50%\r\n      //midwidth is irrelevant since both sides have 0%\r\n      cont.style.gridTemplateRows = \r\n        `${(20+topPercent).toFixed(1)}fr \r\n         ${(68-midPercent).toFixed(1)}fr \r\n         ${(12+bottomPercent).toFixed(1)}fr`\r\n      //all images height has to match mid% \r\n      images.forEach(img => {\r\n        img.style.height = `${(69-midPercent)}vh`  \r\n      });\r\n    }\r\n    /*WebGL module */\r\n    if ( WEBGL.isWebGLAvailable() === false ) {\r\n      document.body.appendChild( WEBGL.getWebGLErrorMessage() );\r\n    }\r\n    var container, controls;\r\n    var camera, scene, renderer, light;\r\n    init();\r\n    animate();\r\n    function init() {\r\n      container = document.createElement( 'div' );\r\n      var linkCont = document.body\r\n      linkCont.appendChild( container );\r\n      camera = new THREE.PerspectiveCamera( 47, window.innerWidth / window.innerHeight, 0.25, 100 );\r\n      camera.position.set( 0, 0, 10 );\r\n      controls = new THREE.OrbitControls( camera );\r\n      controls.target.set( 0, .5, 1 );\r\n      controls.update();\r\n      var urls = [ '' ];\r\n      var loader = new THREE.CubeTextureLoader().setPath( 'static/3dmodel/' );\r\n      var background = loader.load( urls );\r\n      scene = new THREE.Scene();\r\n      scene.background = new THREE.Color(\"rgb(255, 255, 255)\");\r\n      light = new THREE.HemisphereLight( 0xbbbbff, 0x444422 );\r\n      light.position.set( 0, 1, 0 );\r\n      scene.add( light );\r\n      // model\r\n      var loader = new THREE.GLTFLoader().setPath( 'static/3dmodel/' );\r\n      loader.load( 'cubes.gltf', function ( gltf ) {\r\n        gltf.scene.traverse( function ( child ) {\r\n          if ( child.isMesh ) {\r\n            child.material.envMap = background;\r\n          }\r\n        } );\r\n        scene.add( gltf.scene );\r\n        var directionalLight = new THREE.DirectionalLight( 0xffffff, .6 );\r\n        scene.add( directionalLight );\r\n\r\n      }, undefined, function ( e ) {\r\n        console.error( e );\r\n      } );\r\n      renderer = new THREE.WebGLRenderer( { antialias: true } );\r\n      renderer.setPixelRatio( window.devicePixelRatio );\r\n      renderer.setSize( window.innerWidth,window.innerHeight );\r\n      renderer.gammaOutput = true;\r\n      container.appendChild( renderer.domElement );\r\n      window.addEventListener( 'resize', onWindowResize, false );\r\n      \r\n    }\r\n    function onWindowResize() {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize( window.innerWidth, window.innerHeight );\r\n    }\r\n    //\r\n    function animate() {\r\n      requestAnimationFrame( animate );\r\n      renderer.render( scene, camera );\r\n      \r\n    }\r\n    \r\n  }\r\n  onSlideClick(id) {\r\n    setTimeout(()=>{\r\n      var theIfr = document.querySelector('#ifr');\r\n      console.log(theIfr)  \r\n      if(theIfr){\r\n        theIfr.style.backgroundImage = `url(static/gifs/loading2.gif?r=${new Date().getTime()})`\r\n      }\r\n    },1000)\r\n    \r\n    this.setState({ \r\n      isPopActive: !this.state.isPopActive,\r\n      slideInterval: false,\r\n      clickedSlide: id\r\n    })\r\n  }\r\n  activatePop(event) {\r\n    \r\n    this.setState({ \r\n      isPopActive: !this.state.isPopActive,\r\n      slideInterval: 5000\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"container\">  \r\n        <Head>\r\n          <title>Portfolio</title>\r\n          <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" \r\n          />\r\n          <script src=\"static/3dmodel/three.js\"></script>\r\n          <script src=\"static/3dmodel/OrbitControls.js\"></script>\r\n          <script src=\"static/3dmodel/GLTFLoader.js\"></script>\r\n          <script src=\"static/3dmodel/WebGL.js\"></script>\r\n        </Head>\r\n        {/* <p>{this.props.router.query.or}</p> */}\r\n        {/* <div id='theBody'></div> */}\r\n        \r\n        <Slides \r\n          onSlideClick={this.onSlideClick} \r\n          interval={this.state.slideInterval} \r\n          order={this.props.router.query.or}/>\r\n        <Popup \r\n          activatePop={this.activatePop} \r\n          isActive={this.state.isPopActive} \r\n          content={this.state.clickedSlide}/>\r\n          <div id=\"top\">\r\n          <Tooltip \r\n            text={'Drag or scroll this background'}\r\n            position={'left'}\r\n            current={'top'}/>\r\n          </div>\r\n          <div id=\"left\">\r\n            <Tooltip \r\n              text={'Drag or scroll this background'}\r\n              position={'bottom'}\r\n              current={'left'}/>\r\n          </div>\r\n          <div id=\"right\">\r\n            <Tooltip \r\n              text={'Drag or scroll this background'}\r\n              position={'bottom'}\r\n              current={'right'}/> \r\n          </div>\r\n          <div id=\"bottom\"></div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst Extract = withRouter(Index)\r\n\r\nexport default Extract;\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AARA;AASA;AACA;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;;;AACA;AAEA;AACA;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA1LA;AACA;AA6LA;AAEA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}